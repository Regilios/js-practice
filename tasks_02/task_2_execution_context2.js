    function counter() {
        let count = 0;
        return {
            count,
            increment: () => ++count
        };
    }

    const { count, increment } = counter();
    increment();
    console.log(count);

/** 
 *  üí°üí°üí°üí°
    –ì–ª–æ–±–∞–ª—å–Ω—ã–π Execution Context —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Ä–≤—ã–º:
    LexicalEnvironment - { counter: [function], count: <uninitialized>, increment: <uninitialized> }
    VariableEnvironment - { counter: [function], count: <uninitialized>, increment: <uninitialized> }
    –ü—Ä–æ—Ü–µ—Å—Å —Ö–æ—Å—Ç–∏–Ω–≥–∞ (hoisting)

    Execution Phase (–§–∞–∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
    1.  –í—ã–∑–æ–≤ counter() ‚Äî —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤—ã–π Execution Context
        GlobalLexicalEnvironment = {
            environmentRecord: {
                counter: [function],
                count: <uninitialized>,
                increment: <uninitialized>
            },
            outer: null
        };
        –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ count –∏ increment –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ Temporal Dead Zone , –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞: 
        const { count, increment } = counter();

    2.  –í—ã–∑–æ–≤ counter()
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è counter() ‚Üí —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤—ã–π Execution Context.

        –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
        –§—É–Ω–∫—Ü–∏—è counter –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é (—Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è —Ü–µ–ª–∏–∫–æ–º)
        –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è count –æ–±—ä—è–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ let, –ø–æ—ç—Ç–æ–º—É –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ Temporal Dead Zone (TDZ) –¥–æ —Å—Ç—Ä–æ–∫–∏ const { count, increment } = counter();
        –ù–æ —Ç–∞–∫ –∫–∞–∫ count –∏ increment –æ–±—ä—è–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ const, –æ–Ω–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è

        let –∏ const –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è , –Ω–æ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–æ —Å—Ç—Ä–æ–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è ‚Üí TDZ

        LexicalEnvironment –≤–Ω—É—Ç—Ä–∏ counter:
        CounterLexicalEnvironment = {
            environmentRecord: {
                count: 0
            },
            outer: GlobalLexicalEnvironment
        };

        –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç:
        {
            get count() { return count; },   // –≥–µ—Ç—Ç–µ—Ä, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —ç—Ç–∏–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
            increment: () => ++count          // —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å —ç—Ç–∏–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
        }
        –¢–∞–∫ –∫–∞–∫ –æ–±–µ —á–∞—Å—Ç–∏ (get count() –∏ increment) –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π count, –æ–Ω–∏ —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ.

    3. –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ    
        const { count, increment } = counter();
        –í–æ–∑–≤—Ä–∞—â—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:

        get count() ‚Äî –≥–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count
        increment ‚Äî —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ç–æ–∂–µ —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ —ç—Ç—É –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        –ü–æ—Å–ª–µ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏:

        count = –≤—ã–∑–æ–≤ –≥–µ—Ç—Ç–µ—Ä–∞ ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ `count` –∏–∑ CounterLexicalEnvironment
        increment = () => ++count ‚Üí –∑–∞–º—ã–∫–∞–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —Ç–µ–º –∂–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
        count ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ –≥–µ—Ç—Ç–µ—Ä–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
        increment ‚Äî —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –º—É—Ç–∏—Ä—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count

    4.  –í—ã–∑–æ–≤ increment()
        –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:

        –ù–µ –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this
        –ù–µ –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ arguments
        –ù–æ –∏–º–µ–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≤–Ω–µ—à–Ω–µ–µ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ , –≥–¥–µ –±—ã–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞
        –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ:

        increment –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤–Ω—É—Ç—Ä–∏ counter
        –ü–æ—ç—Ç–æ–º—É –æ–Ω–∞ —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ CounterLexicalEnvironment.count
        –ü—Ä–∏ –≤—ã–∑–æ–≤–µ ++count –∏–∑–º–µ–Ω—è–µ—Ç—Å—è count = 1

    5.  –í—ã–≤–æ–¥ console.log(count)
        –≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é , –∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ –≥–µ—Ç—Ç–µ—Ä–∞ , –∫–æ—Ç–æ—Ä—ã–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ count –≤–Ω—É—Ç—Ä–∏ counter 

    –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ü–µ–ø–æ—á–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–π
        [Call Stack]
        ‚Üë
        ‚îî‚îÄ‚îÄ> console.log(count) ‚Üí –≤—ã–∑—ã–≤–∞–µ—Ç –≥–µ—Ç—Ç–µ—Ä ‚Üí –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ CounterLexicalEnvironment.count = 1
        ‚Üë
        ‚îî‚îÄ‚îÄ> increment() ‚Üí —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç CounterLexicalEnvironment.count –¥–æ 1
        ‚Üë
        ‚îî‚îÄ‚îÄ> counter() ‚Üí —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å count = 0 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å –≥–µ—Ç—Ç–µ—Ä–æ–º –∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–º
        ‚Üë
        ‚îî‚îÄ‚îÄ> global ‚Üí –∑–∞–ø—É—Å–∫ –∫–æ–¥–∞

        (–í–∏–¥ –≤—ã–∑–æ–≤–∞)
        [global]
        ‚îî‚îÄ‚îÄ> counter()
                ‚îî‚îÄ‚îÄ> increment() // –º—É—Ç–∏—Ä—É–µ—Ç count –≤–Ω—É—Ç—Ä–∏ counter
        ‚îî‚îÄ‚îÄ> console.log(count) // –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –≥–µ—Ç—Ç–µ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π —á–∏—Ç–∞–µ—Ç count


        [Lexical Environments]

        CounterLexicalEnvironment = {
            environmentRecord: {
                count: 1
            },
            outer: GlobalLexicalEnvironment
        }

        GlobalLexicalEnvironment = {
            environmentRecord: {
                counter: [function],
                count: [getter],      // ‚Üê –ø–æ–ª—É—á–µ–Ω–æ —á–µ—Ä–µ–∑ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é
                increment: [arrow function]
            },
            outer: null
        }
 */