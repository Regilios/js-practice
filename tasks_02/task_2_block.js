function process(data) {
	// делаем что-то интересное
}

// всё, что объявлено внутри этого блока, может исчезнуть после него!
{
	let someReallyBigData = { .. };

	process( someReallyBigData );
}

var btn = document.getElementById( "my_button" );

btn.addEventListener( "click", function click(evt){
	console.log("button clicked");
}, /*capturingPhase=*/false );

/* 
    Обратный вызов обработчика щелчка click совсем не требует переменную someReallyBigData. Это значит, теоретически, что после выполнения process(..), 
    большая памятезатратная структура данных может быть собрана сборщиком мусора. Однако, весьма вероятно (хотя зависит от реализации), 
    что движок JS все еще должен будет оставить структуру в памяти, поскольку у функции click есть замыкание, действующее во всей области видимости.

    Блочная область видимости может устранить этот недостаток, делая более явным для движка то, что ему не нужна someReallyBigData:
*/